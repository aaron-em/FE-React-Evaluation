{"version":3,"sources":["reducers/user.ts","lib/config.ts","lib/fake-api-client.ts","lib/dummy-data.ts","reducers/data.ts","reducers/index.ts","components/Cards.tsx","components/Detail.tsx","components/Emojo.tsx","lib/auto-color-text.ts","lib/rgb2hsl.ts","components/ColoredPill.tsx","assets/noinc-logo.png","components/Header.tsx","components/List.tsx","components/Login.tsx","components/NotFound.tsx","pages/Home.tsx","pages/Items.tsx","pages/NotFound.tsx","App.tsx","AppContainer.tsx","serviceWorker.js","index.tsx"],"names":["actions","authenticatedUserName","type","initialUserState","recursivelyFreeze","o","r","Object","entries","map","k","v","reduce","a","i","freeze","config","rootPath","process","totallyRealApiResponseBody","skills","id","name","DateLearned","moment","subtract","add","format","detail","interests","current","apiUrl","thingsApi","url","fetch","Promise","resolve","setTimeout","fakeApiClient","fakeGet","receiveAction","response","dispatch","getState","state","now","Math","floor","Date","getTime","lastFetch","lastError","cacheSeconds","apiClient","console","error","message","initialDataState","combineReducers","user","action","data","Card","title","item","className","to","text","Cards","items","key","Detail","useParams","useSelector","find","s","match","parseInt","toID","NotFound","Sparkle","value","label","role","aria-label","Emojo","autoColorText","rgb","h","n","rp","gp","bp","Cmax","max","Cmin","min","Î”","l","abs","rgb2hsl","split","filter","Boolean","rgbStringToTuple","md5sum","slice","clamp","newBackground","hsl","C","X","m","round","hsl2rgb","toString","padStart","join","ColoredPill","useState","backgroundColor","setBackgroundColor","useEffect","style","HeaderLink","active","useRouteMatch","path","exact","HeaderLogo","src","NoIncLogo","alt","HeaderUserDisplay","connect","loggedInUser","logUserOut","UserActions","onClick","Header","titleCase","capped","toUpperCase","plural","singular","replace","List","setTitle","validateEmail","maybeEmail","validateHasValue","maybeValue","length","Login","onSuccess","initialValues","emailAddress","password","onSubmit","values","setSubmitting","errors","touched","placeholder","validate","Home","username","Items","Content","children","App","useDispatch","isAuthenticated","dataActions","userActions","logUserIn","persistConfig","storage","localStorage","persistedReducer","persistReducer","RootReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","AppContainer","loading","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.253eb970.chunk.js","sourcesContent":["import { Action } from \"redux\";\n\n// TODO: type-restrict AuthenticatedUserName so Home doesn't need string | null\nexport type AuthenticatedUserName = string | null;\n\nexport interface UserLoginAction extends Action<\"user.LOGIN\"> {\n  authenticatedUserName: AuthenticatedUserName;\n}\n\nexport type UserLogoutAction = Action<\"user.LOGOUT\">;\n\nexport const actions = {\n  LOGIN: (authenticatedUserName: AuthenticatedUserName): UserLoginAction => ({\n    type: \"user.LOGIN\",\n    authenticatedUserName,\n  }),\n  LOGOUT: (): UserLogoutAction => ({\n    type: \"user.LOGOUT\",\n  }),\n};\n\nexport type UserState = {\n  authenticatedUserName: AuthenticatedUserName;\n};\n\nconst initialUserState: UserState = {\n  authenticatedUserName: null,\n};\n\nexport default function user(\n  state: UserState = initialUserState,\n  action: UserLoginAction | UserLogoutAction\n): UserState {\n  switch (action.type) {\n    case \"user.LOGIN\":\n      return {\n        ...state,\n        authenticatedUserName: action.authenticatedUserName,\n      };\n\n    case \"user.LOGOUT\":\n      return {\n        ...state,\n        authenticatedUserName: null,\n      };\n\n    default:\n      return state;\n  }\n}\n","import config from \"../config.json\";\n\nexport type Config = {\n  rootPath: string;\n  thingsApi: {\n    url: string;\n    cacheSeconds: number;\n  };\n};\n\nfunction recursivelyFreeze(\n  o: Record<string, unknown>\n): Record<string, unknown> {\n  const r = Object.entries(o)\n    .map(([k, v]) =>\n      typeof v === \"object\"\n        ? { [k]: recursivelyFreeze(v as Record<string, unknown>) }\n        : { [k]: v }\n    )\n    .reduce((a, i) => ({ ...a, ...i }), {});\n\n  Object.freeze(r);\n\n  return r;\n}\n\nexport default recursivelyFreeze({\n  ...config,\n  rootPath: process.env.REACT_APP_DEPLOY_ROOT_PATH || config.rootPath,\n}) as Config;\n","import { Skill, Interest } from \"../reducers/data\";\nimport config from \"./config\";\nimport { fakeInterests as interests, fakeSkills as skills } from \"./dummy-data\";\n\nexport type DataResponse = {\n  skills: Skill[];\n  interests: Interest[];\n};\n\nconst totallyRealApiResponseBody = {\n  skills,\n  interests\n};\n\nasync function fakeGet(): Promise<DataResponse> {\n  const apiUrl = config.thingsApi.url;\n  await fetch(apiUrl);\n\n  // pretend we're doing response handling:\n  // ordinarily we'd unwrap and JSON-parse, etc., and potentially\n  // use runtypes to defend the boundaries of our type system by\n  // validating that what we get back is of a shape we expect\n\n  // ordinarily also this would actually *need* to be async, so\n  // let's make it real, and a little slow too\n  return new Promise(resolve => {\n    setTimeout(() => resolve(totallyRealApiResponseBody), 150);\n  });\n}\n\nconst fakeApiClient = {\n  fakeGet\n};\n\nexport default fakeApiClient;\n","import moment from \"moment\";\n\nconst Age = 30;\nexport const fakeInterests = [\n  {\n    id: 1,\n    name: \"Soccer\",\n    type: \"Sport\",\n    current: true,\n    detail: \"Soccer is a Sport and Sports are cool\",\n  },\n  {\n    id: 2,\n    name: \"Football\",\n    type: \"Sport\",\n    current: true,\n    detail: \"Football is a Sport and Sports are physical\",\n  },\n  {\n    id: 3,\n    name: \"Chess\",\n    type: \"Game\",\n    current: false,\n    detail: \"Chess is a game and games are fun\",\n  },\n  {\n    id: 4,\n    name: \"Racing\",\n    type: \"Sport\",\n    current: false,\n    detail: \"Racing is a loud sport\",\n  },\n  {\n    id: 5,\n    name: \"Horseback Riding\",\n    type: \"Sport\",\n    current: true,\n    detail: \"Horseback Riding is an ancient sport\",\n  },\n];\n\nexport const fakeSkills = [\n  {\n    id: 1,\n    name: \"Reading\",\n    type: \"Essential\",\n    DateLearned: moment().subtract(Age, \"years\").add(2, \"years\").format(),\n    detail: \"Reading is essential and fun\",\n  },\n  {\n    id: 2,\n    name: \"Writing\",\n    type: \"Essential\",\n    DateLearned: moment().subtract(Age, \"years\").add(2, \"years\").format(),\n    detail: \"Writing is essential and fun\",\n  },\n  {\n    id: 3,\n    name: \"Riding A Bike\",\n    type: \"Practical\",\n    DateLearned: moment().subtract(Age, \"years\").add(5, \"years\").format(),\n    detail: \"Riding A Bike is not essential\",\n  },\n  {\n    id: 4,\n    name: \"Driving A Car\",\n    type: \"Practical\",\n    DateLearned: moment().subtract(Age, \"years\").add(16, \"years\").format(),\n    detail: \"Driving A Car is essential in some countries\",\n  },\n  {\n    id: 5,\n    name: \"Coding\",\n    type: \"Professional\",\n    DateLearned: moment().subtract(Age, \"years\").add(24, \"years\").format(),\n    detail: \"Coding is profitable\",\n  },\n];\n","import { Action } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\n\nimport config from \"../lib/config\";\nimport apiClient, { DataResponse } from \"../lib/fake-api-client\";\n\nexport type FetchDataAction = Action<\"data.FETCH\">;\n\ninterface ReceiveDataAction extends Action<\"data.RECEIVE\"> {\n  response?: DataResponse;\n}\n\ninterface ErrorDataAction extends Action<\"data.ERROR\"> {\n  error: string;\n}\n\nfunction receiveAction(response?: DataResponse): ReceiveDataAction {\n  return {\n    type: \"data.RECEIVE\",\n    response\n  };\n}\n\nfunction errorAction(error: string): ErrorDataAction {\n  return {\n    type: \"data.ERROR\",\n    error\n  };\n}\n\nconst fetchData = (): ThunkAction<\n  void,\n  DataState,\n  unknown,\n  ReceiveDataAction | ErrorDataAction\n> => async (dispatch, getState): Promise<void> => {\n  const state = getState();\n  const now = Math.floor(new Date().getTime() / 1000);\n  const lastFetch = state.lastFetch;\n\n  if (!state.lastError && now - lastFetch < config.thingsApi.cacheSeconds) {\n    dispatch(receiveAction());\n    return;\n  }\n\n  try {\n    const response = await apiClient.fakeGet();\n    dispatch(receiveAction(response));\n  } catch (e) {\n    // presumably warn the user and maybe annotate an APM trace or similar, but for this:\n    console.error(e.message);\n    dispatch(errorAction(e.message));\n  }\n};\n\nexport const actions = {\n  FETCH: fetchData\n};\n\n// Type aliases are optional, but useful in that they help us\n// better reason about and control the flow of data through our\n// application. They also simplify later refactoring if we\n// e.g. switch from numeric IDs to UUIDs - the alias only has to be\n// changed once.\n\nexport type ID = number;\n\nexport function isID(v: string | number): v is ID {\n  return typeof v === \"number\" || !!v.match(/^[0-9]+$/);\n}\n\nexport function toID(s: string): ID | false {\n  return isID(s) && parseInt(s, 10);\n}\n\nexport type Timestamp = number;\n\nexport type TimeISO8601 = string;\n\n// We could use \"SkillType\" and \"InterestType\" enums, but that\n// would require frontend changes to handle new types in data\n// coming from the backend. Since nothing else currently requires\n// that, we may as well keep them as strings\n\nexport type Skill = {\n  id: ID;\n  name: string;\n  type: string;\n  DateLearned: TimeISO8601;\n  detail: string;\n};\n\nexport type Interest = {\n  id: ID;\n  name: string;\n  type: string;\n  current: boolean;\n  detail: string;\n};\n\nexport type Item = Skill | Interest;\n\nexport type DataState = {\n  lastFetch: Timestamp;\n  lastError: string | null;\n  skills: Skill[];\n  interests: Interest[];\n};\n\nconst initialDataState: DataState = {\n  lastFetch: 0,\n  lastError: null,\n  skills: [],\n  interests: []\n};\n\nexport default function data(\n  state: DataState = initialDataState,\n  action: FetchDataAction | ReceiveDataAction | ErrorDataAction\n): DataState {\n  const now = new Date().getTime();\n\n  switch (action.type) {\n    case \"data.RECEIVE\":\n      if (action.response) {\n        state = {\n          ...state,\n          lastFetch: now,\n          ...action.response\n        };\n      }\n      return state;\n\n    case \"data.ERROR\":\n      return {\n        ...state,\n        lastFetch: now,\n        lastError: action.error\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport user, { UserState } from \"./user\";\nimport data, { DataState } from \"./data\";\n\nexport type State = {\n  user: UserState;\n  data: DataState;\n};\n\nexport default combineReducers({ user, data });\n","import React, { ReactElement } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Item } from \"../reducers/data\";\nimport { ColoredPill } from \"../components\";\n\nimport \"./Cards.css\";\n\ntype CardProps<T extends Item> = {\n  type: string;\n  title: string;\n  item: T;\n};\n\nfunction Card<T extends Item>({\n  type,\n  title,\n  item,\n}: CardProps<T>): ReactElement {\n  return (\n    <Link className=\"card-link\" to={`${type}/${item.id}`}>\n      <div className=\"card\">\n        <div className=\"inner\">\n          <h2>\n            {title} {item.id}\n          </h2>\n          <table>\n            <tbody>\n              <tr>\n                <th>NAME:</th>\n                <td>{item.name}</td>\n              </tr>\n              <tr>\n                <th>TYPE:</th>\n                <td>\n                  <ColoredPill text={item.type} />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Link>\n  );\n}\n\n// See comment below for details\n/* eslint-disable-next-line @typescript-eslint/no-unused-vars */\nexport type CardsProps<T extends Item> = {\n  type: string;\n  title: string;\n  items: Item[];\n};\n\nexport function Cards<T extends Item>({\n  type,\n  title,\n  items,\n}: CardsProps<T>): ReactElement {\n  return (\n    <div className=\"cards\">\n      {\n        // The problem here seems to be that I don't know how to\n        // tell the type checker that, at runtime, `items` will be\n        // *only* T[], i.e. only either Skill[] or Interest[]. I\n        // assume this is solvable, but it needs someone who knows\n        // more TS than I do right now.\n        // In the meantime, we escape with `any` and promise eslint\n        // it's ok.\n        // In production code I'd instead derive SkillsList and\n        // InterestsList from List and give them the according\n        // concrete types. (And would also be using runtypes to\n        // validate what we get from the API.)\n\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        items.map((item: any, i: number) => (\n          <Card<T> key={i} type={type} title={title} item={item} />\n        ))\n        /* eslint-enable @typescript-eslint/no-explicit-any */\n      }\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\n\nimport { ColoredPill, NotFound } from \"../components\";\nimport { State } from \"../reducers\";\nimport { Item, toID } from \"../reducers/data\";\n\nexport type DetailProps = {\n  type: \"skills\" | \"interests\";\n};\n\nexport type DetailParams = {\n  id: string;\n};\n\nexport function Detail({ type }: DetailProps): ReactElement {\n  const { id } = useParams<DetailParams>();\n  const item = useSelector((state: State) =>\n    (state.data[type] as Item[]).find((i: Item) => i.id === toID(id))\n  );\n\n  return typeof item === \"undefined\" ? (\n    <NotFound />\n  ) : (\n    <div className=\"detail\">\n      <h1>{item.name}</h1>\n      <ColoredPill text={item.type} />\n      <p>{item.detail}</p>\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\n\n// Support a11y labels for emoji for which they make sense, and\n// default to an empty string for purely decorative ones\ntype EmojoProps = {\n  value: string;\n  label?: string;\n};\n\nexport function Emojo({ value, label = \"\" }: EmojoProps): ReactElement {\n  return (\n    <span role=\"img\" aria-label={label}>\n      {value}\n    </span>\n  );\n}\n\nexport const Sparkle = (): ReactElement => Emojo({ value: \"âœ¨\" });\n","import { hex as md5sum } from \"js-md5\";\n\nimport {\n  hsl2rgb,\n  rgb2hsl,\n  rgbStringToTuple,\n  rgbTupleToString,\n} from \"./rgb2hsl\";\n\nexport type HexColor = string;\n\nexport default function autoColorText(text: string): HexColor {\n  const backgroundColor = md5sum(text).slice(6, 12);\n\n  const rgb = rgbStringToTuple(backgroundColor);\n  const [h, s, l] = rgb2hsl(rgb);\n\n  // Clamp saturation and luminance 0.6 <= n <= 0.8 so we get nice\n  // pastels\n  const clamp = (n: number) => 0.7 + n / 5;\n  const newBackground = rgbTupleToString(hsl2rgb([h, clamp(s), clamp(l)]));\n\n  return `#${newBackground}`;\n}\n","export type HSLElement = number;\nexport type HSLTuple = [HSLElement, HSLElement, HSLElement];\n\nexport type RGBElement = number;\nexport type RGBTuple = [RGBElement, RGBElement, RGBElement];\n\nexport function rgbStringToTuple(s: string): RGBTuple {\n  return s\n    .split(/(..)/)\n    .filter(Boolean)\n    .map((h: string) => parseInt(h, 16)) as RGBTuple;\n}\n\nexport function rgbTupleToString(t: RGBTuple): string {\n  return t.map((n) => n.toString(16).padStart(2, \"0\")).join(\"\");\n}\n\n// Implemented per https://www.rapidtables.com/convert/color/rgb-to-hsl.html\nexport function rgb2hsl(rgb: RGBTuple): HSLTuple {\n  const [rp, gp, bp] = rgb.map((n) => n / 255);\n  const Cmax = Math.max(rp, gp, bp);\n  const Cmin = Math.min(rp, gp, bp);\n  const Î” = Cmax - Cmin;\n\n  const l = (Cmax + Cmin) / 2;\n  const s = Î” === 0 ? 0 : Î” / (1 - Math.abs(2 * l - 1));\n\n  let h: HSLElement;\n\n  if (Î” === 0) {\n    h = 0;\n  } else {\n    if (Cmax === rp) {\n      h = (gp - bp) / Î”;\n    } else if (Cmax === gp) {\n      h = 2 + (bp - rp) / Î”;\n    } /* Cmax === bp */ else {\n      h = 4 + (rp - gp) / Î”;\n    }\n  }\n\n  h *= 60;\n  h += h < 0 ? 360 : 0;\n  h %= 360;\n\n  return [h, s, l];\n}\n\n// Implemented per https://www.rapidtables.com/convert/color/hsl-to-rgb.html\nexport function hsl2rgb(hsl: HSLTuple): RGBTuple {\n  const [h, s, l] = hsl;\n\n  const C = (1 - Math.abs(2 * l - 1)) * s;\n  const X = C * (1 - Math.abs(((h / 60) % 2) - 1));\n  const m = l - C / 2;\n\n  const rgbp: number[] = (() => {\n    if (h >= 300) {\n      return [C, 0, X];\n    } else if (h >= 240) {\n      return [X, 0, C];\n    } else if (h >= 180) {\n      return [0, X, C];\n    } else if (h >= 120) {\n      return [0, C, X];\n    } else if (h >= 60) {\n      return [X, C, 0];\n    } /* h >= 0 */ else {\n      return [C, X, 0];\n    }\n  })();\n\n  return rgbp.map((n) => Math.round((n + m) * 255)) as RGBTuple;\n}\n","import React, { ReactElement, useEffect, useState } from \"react\";\n\nimport autoColorText from \"../lib/auto-color-text\";\n\nimport \"./ColoredPill.css\";\n\nexport type ColoredPillProps = {\n  text: string;\n};\n\nexport function ColoredPill({ text }: ColoredPillProps): ReactElement {\n  const [backgroundColor, setBackgroundColor] = useState<string>(\n    autoColorText(text)\n  );\n\n  useEffect(() => {\n    setBackgroundColor(autoColorText(text));\n  }, [text]);\n\n  return (\n    <div className=\"colored-pill\" style={{ backgroundColor }}>\n      {text}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/noinc-logo.de3da5c6.png\";","import React, { ReactElement } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ActionCreator } from \"redux\";\nimport { FaUserAstronaut, FaSignOutAlt } from \"react-icons/fa\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { State } from \"../reducers\";\nimport {\n  AuthenticatedUserName,\n  actions as UserActions,\n  UserLogoutAction,\n} from \"../reducers/user\";\nimport config from \"../lib/config\";\n\nimport \"./Header.css\";\nimport NoIncLogo from \"../assets/noinc-logo.png\";\n\nconst rootPath = config.rootPath;\n\ntype LogoutDispatcher = ActionCreator<UserLogoutAction>;\n\ntype HeaderLinkProps = {\n  text: string;\n  to: string;\n};\n\nfunction HeaderLink({ text, to }: HeaderLinkProps) {\n  const active = useRouteMatch({\n    path: to,\n    exact: to === `${rootPath}/`, // FIXME abstract into <App>\n  });\n\n  return (\n    <div className=\"link\">\n      <Link className={active ? \"active\" : \"\"} to={to}>\n        {text}\n      </Link>\n    </div>\n  );\n}\n\nfunction HeaderLogo() {\n  return (\n    <div className=\"logo\">\n      <img src={NoIncLogo} alt=\"N0.1nc\" />\n    </div>\n  );\n}\n\ntype HeaderUserDisplayProps = {\n  loggedInUser: AuthenticatedUserName;\n  logUserOut: LogoutDispatcher;\n};\n\nconst HeaderUserDisplay = connect(\n  (state: State) => ({\n    loggedInUser: state.user.authenticatedUserName,\n  }),\n  (dispatch) => ({\n    logUserOut: () => dispatch(UserActions.LOGOUT()),\n  })\n)(({ loggedInUser, logUserOut }: HeaderUserDisplayProps) => (\n  <div className=\"user-display\">\n    <FaUserAstronaut className=\"icon-user\" />\n    <div className=\"user-name\">{loggedInUser}</div>\n    <FaSignOutAlt\n      className=\"icon-logout\"\n      title=\"Log Out\"\n      onClick={logUserOut}\n    />\n  </div>\n));\n\nexport function Header(): ReactElement {\n  return (\n    <div className=\"App-header\">\n      <HeaderLogo />\n      <HeaderLink text=\"Home\" to={`${rootPath}/`} />\n      <HeaderLink text=\"Skills\" to={`${rootPath}/skills`} />\n      <HeaderLink text=\"Interests\" to={`${rootPath}/interests`} />\n      <HeaderUserDisplay />\n    </div>\n  );\n}\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { Cards } from \"../components\";\nimport { State } from \"../reducers\";\nimport { Item } from \"../reducers/data\";\n\nimport \"./List.css\";\n\nexport type ListProps = {\n  type: \"skills\" | \"interests\";\n};\n\nfunction titleCase(type: string): Record<string, string> {\n  const capped = type.slice(0, 1).toUpperCase() + type.slice(1);\n  return {\n    plural: capped,\n    singular: capped.replace(/s$/, \"\"),\n  };\n}\n\nexport function List<T extends Item>({ type }: ListProps): ReactElement {\n  const items = useSelector((state: State) => state.data[type]);\n  const [title, setTitle] = useState<Record<string, string>>(titleCase(type));\n\n  useEffect(() => {\n    setTitle(titleCase(type));\n  }, [type]);\n\n  return (\n    <div className=\"list\">\n      <h1>{title.plural}</h1>\n      <Cards<T> type={type} title={title.singular} items={items} />\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { Formik, Form, Field, FormikHelpers } from \"formik\";\n\nimport \"./Login.css\";\nimport \"./Form.css\";\n\nimport { Sparkle } from \".\";\nimport NoIncLogo from \"../assets/noinc-logo.png\";\nimport { AuthenticatedUserName } from \"../reducers/user\";\n\nconst validateEmail = (maybeEmail: string) =>\n  !maybeEmail.match(/^\\S+@\\S+\\.\\S+$/) && \"Please enter a valid email address.\";\n\nconst validateHasValue = (maybeValue: string) =>\n  maybeValue.length === 0 && \"Please enter a value.\";\n\ntype LoginFormValues = {\n  emailAddress: string;\n  password: string;\n};\n\ntype LoginProps = {\n  onSuccess: (n: AuthenticatedUserName) => void;\n};\n\nexport function Login({ onSuccess }: LoginProps): ReactElement {\n  return (\n    <div className=\"Login\">\n      <div className=\"container\">\n        <div className=\"logo\">\n          <img src={NoIncLogo} alt=\"N0.1nc\" />\n        </div>\n        <div className=\"login-form\">\n          <div className=\"Form\">\n            <p>\n              Log in to our <Sparkle />\n              Magic Portal\n              <Sparkle />\n            </p>\n            <Formik\n              initialValues={{ emailAddress: \"\", password: \"\" }}\n              onSubmit={(\n                values,\n                { setSubmitting }: FormikHelpers<LoginFormValues>\n              ) => {\n                onSuccess(values.emailAddress);\n                setSubmitting(false);\n              }}\n            >\n              {({ errors, touched }) => (\n                <Form>\n                  <div className=\"field\">\n                    <Field\n                      className={\n                        touched.emailAddress && errors.emailAddress && \"invalid\"\n                      }\n                      name=\"emailAddress\"\n                      placeholder=\"Email Address\"\n                      validate={validateEmail}\n                    />\n                    <div className=\"error\">\n                      {touched.emailAddress && errors.emailAddress\n                        ? errors.emailAddress\n                        : \"\\u00A0\"}\n                    </div>\n                  </div>\n                  <div className=\"field\">\n                    <Field\n                      className={\n                        touched.password && errors.password && \"invalid\"\n                      }\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder=\"Password\"\n                      validate={validateHasValue}\n                    />\n                    <div className=\"error\">\n                      {touched.password && errors.password\n                        ? errors.password\n                        : \"\\u00A0\"}\n                    </div>\n                  </div>\n                  <div className=\"field\">\n                    <button type=\"submit\">LOGIN</button>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\n\nexport function NotFound(): ReactElement {\n  return (\n    <div className=\"not-found\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { Cards } from \"../components\";\nimport { State } from \"../reducers\";\nimport { Interest } from \"../reducers/data\";\n\nimport \"./Home.css\";\n\nexport type HomeProps = {\n  username: string | null;\n};\n\nexport function Home({ username }: HomeProps): ReactElement {\n  const { interests } = useSelector((state: State) => state.data);\n\n  return (\n    <div className=\"page home\">\n      {username ? <h1 className=\"welcome-banner\">Welcome {username}</h1> : null}\n      <p className=\"lipsum\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n        veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n        commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\n        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\n        occaecat cupidatat non proident, sunt in culpa qui officia deserunt\n        mollit anim id est laborum.\n      </p>\n      <Cards<Interest>\n        type=\"interests\"\n        title=\"Interest\"\n        items={interests.slice(0, 3)}\n      />\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\n\nimport { Detail, List } from \"../components\";\nimport { Item } from \"../reducers/data\";\n\nexport type ItemsProps = {\n  type: \"skills\" | \"interests\";\n};\n\nexport function Items<T extends Item>({ type }: ItemsProps): ReactElement {\n  const { path } = useRouteMatch();\n\n  return (\n    <div className={`page ${type}`}>\n      <Switch>\n        <Route exact path={`${path}/`}>\n          <List<T> type={type} />\n        </Route>\n        <Route path={`${path}/:id`}>\n          <Detail type={type} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\n\nimport { NotFound as NotFoundComponent } from \"../components\";\n\nexport function NotFound(): ReactElement {\n  return (\n    <div className=\"page not-found\">\n      <NotFoundComponent />\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { ActionCreator } from \"redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport { State } from \"./reducers\";\nimport {\n  AuthenticatedUserName,\n  actions as userActions,\n  UserLoginAction,\n} from \"./reducers/user\";\nimport {\n  actions as dataActions,\n  FetchDataAction,\n  Interest,\n  Skill,\n} from \"./reducers/data\";\nimport { Header, Login } from \"./components\";\nimport { Home, Items, NotFound } from \"./pages\";\nimport config from \"./lib/config\";\n\nimport \"./App.css\";\n\nexport type LoginDispatcher = ActionCreator<UserLoginAction>;\nexport type FetchDataDispatcher = ActionCreator<FetchDataAction>;\n\nconst rootPath = config.rootPath;\n\ntype ContentProps = { children: ReactElement | ReactElement[] };\n\nfunction Content({ children }: ContentProps) {\n  return <div className=\"App-content\">{children}</div>;\n}\n\nexport default function App(): ReactElement {\n  const dispatch = useDispatch();\n\n  const fetchData = () => dispatch(dataActions.FETCH());\n  const logUserIn = (authenticatedUserName: AuthenticatedUserName) =>\n    dispatch(userActions.LOGIN(authenticatedUserName));\n\n  const { authenticatedUserName: loggedInUser } = useSelector(\n    (state: State) => state.user\n  );\n  const isAuthenticated = !!loggedInUser;\n\n  return (\n    <div className=\"App\">\n      {!isAuthenticated ? (\n        <Login\n          onSuccess={(authenticatedUserName: AuthenticatedUserName) => {\n            fetchData();\n            logUserIn(authenticatedUserName);\n          }}\n        />\n      ) : (\n        <Content>\n          <BrowserRouter>\n            <Header />\n            <Switch>\n              <Route exact path={`${rootPath}/`}>\n                <Home username={loggedInUser} />\n              </Route>\n              <Route path={`${rootPath}/skills`}>\n                <Items<Skill> type=\"skills\" />\n              </Route>\n              <Route path={`${rootPath}/interests`}>\n                <Items<Interest> type=\"interests\" />\n              </Route>\n              <Route path=\"*\">\n                <NotFound />\n              </Route>\n            </Switch>\n          </BrowserRouter>\n        </Content>\n      )}\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport localStorage from \"redux-persist/lib/storage\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport RootReducer from \"./reducers\";\nimport App from \"./App\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage: localStorage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, RootReducer);\n\nconst store = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\nconst persistor = persistStore(store);\n\nexport default function AppContainer(): ReactElement {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  );\n}\n","/* eslint-disable */\n// We aren't using the service worker\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport AppContainer from \"./AppContainer\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.css\";\n\nReactDOM.render(<AppContainer />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}